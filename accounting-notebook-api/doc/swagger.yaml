swagger: "2.0"
info:
  description: "We are looking to build a money accounting application. We need a web application, which tracks money flow of a single user."
  version: "1.0.0"
  title: "Accounting notebook"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
basePath: "/"
tags:
- name: "transactions"
  description: "Transaction operations. There are 2 types of transaction: credit and debit. Credit transaction leads to the account balance growth. Debit transaction leads to the account balance reduction."
- name: "default"

schemes:
- "http"
paths:
  /transactions:
    post:
      tags:
      - "transactions"
      summary: "Commit new transaction to the account"
      description: ""
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Transaction object"
        required: true
        schema:
          $ref: "#/definitions/TransactionBody"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Transaction"

  /transactions/{transactionId}:
    get:
      tags:
      - "transactions"
      summary: "Find transaction by ID"
      description: "Returns a single transaction object"
      produces:
      - "application/json"
      parameters:
      - name: "transactionId"
        in: "path"
        description: "ID of transaction to return"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Transaction"
        400:
          description: "Invalid ID supplied"
        404:
          description: "transaction not found"
  /:
    get:
      tags:
      - "default"
      summary: "Fetches current account balance"
      description: "Returns the account balance"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Account"

definitions:
  Account:
    type: "object"
    properties:
      balance:
        type: "number"
        format: "float"
      transactions:
          $ref: "#/definitions/Transaction"

  TransactionBody:
    type: "object"
    properties:
      type:
        type: "string"
        enum: [CREDIT, DEBIT]
      amount:
        type: "number"
        format: "float"
        description: "Transaction numeric value. Incrementing or decrementing the account balance, based on the transaction type."
      description:
        type: "string"
        description: "Description of the transaction performed"

  Transaction:
    type: "object"
    properties:
      id:
        type: "string"
        format: "uuid"
        description: "Unique transaction identifier, generated by the service, when the transaction is being stored"
      type:
        type: "string"
      amount:
        type: "number"
        format: "float"
        description: "Transaction numeric value. Incrementing or decrementing the account balance, based on the transaction type."
      effectiveDate:
        type: "string"
        format: "($date-time)"
        description: "Effective date-time, generated by the service, when the transaction is being stored."
      description:
        type: "string"
        description: "Description of the transaction performed"
  